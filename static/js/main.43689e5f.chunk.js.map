{"version":3,"sources":["components/Search.js","components/Output.js","img/React.png","img/Sass.png","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Search","handleQuery","className","onSubmit","e","preventDefault","query","target","value","trim","replace","escape","validate","onReset","type","name","id","placeholder","Output","searchQuery","useState","setQuery","city","setCity","country","setCountry","fetchList","setFetchList","error","setError","months","days","useEffect","length","console","log","queryParts","base","units","key","fetch","then","res","json","data","cod","list","map","item","Date","dt","getDay","getDate","getMonth","getHours","Math","round","main","temp","weather","description","style","backgroundImage","icon","Footer","src","ReactImg","alt","SassImg","href","App","q","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43689e5f.chunk.js","sourcesContent":["const Search = ({ handleQuery }) => {\r\n  const validate = (e) => {\r\n    e.preventDefault();\r\n    let query = e.target[0].value.trim();\r\n    query = query.replace(/\\s\\s+/g, \" \");\r\n    handleQuery(escape(query));\r\n  };\r\n\r\n  const clear = (e) => {\r\n    handleQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"app__search\">\r\n      <form\r\n        onSubmit={(e) => validate(e)}\r\n        onReset={(e) => clear(e)}\r\n        className=\"form\"\r\n      >\r\n        <div className=\"formInputContainer\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"City\"\r\n            id=\"city\"\r\n            placeholder=\"Search City\"\r\n            className=\"formInputContainer__input\"\r\n          />\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <button type=\"reset\" className=\"formButtonsContainer__clear\">\r\n          &#10006;\r\n          </button>\r\n          <button type=\"submit\" className=\"formButtonsContainer__submit\">\r\n          &#10004;\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst Output = ({ searchQuery }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [fetchList, setFetchList] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n  useEffect(() => {\r\n    if (searchQuery.length > 0) {\r\n      console.log(\"search query recieved\");\r\n      setQuery(searchQuery);\r\n      console.log(searchQuery);\r\n    } else {\r\n      console.log(\"empty\"); \r\n      setQuery(\"\");\r\n      setCity(\"\");\r\n      setCountry(\"\");\r\n      setFetchList([]);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      console.log(\"fetching data\");\r\n      let queryParts = {\r\n        base: \"https://api.openweathermap.org/data/2.5/forecast?q=\",\r\n        units: \"metric\",\r\n        key: \"6c8756a49b801bc327f94d283e99889d\",\r\n      };\r\n\r\n      if (query.length > 0) {\r\n        const forecast =\r\n          queryParts.base +\r\n          query +\r\n          \"&units=\" +\r\n          queryParts.units +\r\n          \"&appid=\" +\r\n          queryParts.key;\r\n\r\n        fetch(forecast)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            if (data.cod !== \"404\") {\r\n              console.log(data);\r\n              setError(false);\r\n              setCity(data.city.name);\r\n              setCountry(data.city.country);\r\n              setFetchList(data.list);\r\n            } else {\r\n              setError(true);\r\n              setCity(\"\");\r\n              setCountry(\"\");\r\n              setFetchList([]);\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      console.log(\"no search executed\");\r\n    }\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"app__output\">\r\n      {error && (\r\n        <div className=\"errorContainer\">\r\n          <h1>Invalid input</h1>\r\n        </div>\r\n      )}\r\n      {city && (\r\n        <div className=\"outputContainer\">\r\n          <div className=\"outputContainer__title\">\r\n            <h1>{city + \", \" + country}</h1>\r\n          </div>\r\n          <div className=\"outputContainer__list\">\r\n            {fetchList &&\r\n              fetchList.map((item) => {\r\n                return (\r\n                  <div key={item.dt} className=\"weatherItem\">\r\n                    <p className=\"weatherItem__text\">\r\n                      {\" \"}\r\n                      {days[new Date(item.dt * 1000).getDay()] + ' ' +\r\n                      new Date(item.dt * 1000).getDate() +\r\n                        \" / \" +\r\n                        months[new Date(item.dt * 1000).getMonth()] +\r\n                        \" / \" +\r\n                        (new Date(item.dt * 1000).getHours() + 1) +\r\n                        \":00 \" +\r\n                        Math.round(item.main.temp) +\r\n                        \"Â°C \" +\r\n                        item.weather[0].description}{\" \"}\r\n                    </p>\r\n                    <div\r\n                      className=\"weatherItem__img\"\r\n                      style={{\r\n                        backgroundImage: `url('http://openweathermap.org/img/wn/${item.weather[0].icon}@4x.png')`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Output;\r\n","export default __webpack_public_path__ + \"static/media/React.3036e716.png\";","export default __webpack_public_path__ + \"static/media/Sass.fd475502.png\";","import ReactImg from '../img/React.png'\r\nimport SassImg from '../img/Sass.png'\r\n\r\nconst Footer = () => {\r\n    return <div className=\"app__footer\">\r\n        <p className=\"footerText\">\r\n        This site does not store any personal information\r\n        </p>\r\n        <p className=\"footerText\">\r\n        Built with <img src={ReactImg} alt=\"react\" className=\"react\"/> and styled with <img src={SassImg} alt=\"sass\" className=\"sass\" />\r\n        </p>\r\n        <p className=\"footerText\">\r\n        Check my github <a href=\"https://github.com/ShaumikRahman\">here</a>\r\n        </p>\r\n    </div>\r\n}\r\n\r\nexport default Footer","import { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport Output from \"./components/Output\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">5 Day Weather</h1>\n      <Search handleQuery={(q) => {setQuery(q)}}/>\n      <Output searchQuery={query}/>\n      <Footer />\n    </div>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}